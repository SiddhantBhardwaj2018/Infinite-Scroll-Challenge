{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhard\\\\Desktop\\\\React Projects Compendium\\\\infinite-scroll-challenge\\\\client\\\\src\\\\components\\\\Images.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Image from \"./Image\";\nexport class Images extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [],\n      count: 30,\n      start: 1\n    };\n\n    this.fetchImages = () => {\n      const {\n        count,\n        start\n      } = this.state;\n      this.setState({\n        start: this.state.start + count\n      });\n      axios.get(`/api/photos?count=${count}&start=${start}`).then(res => this.setState({\n        images: this.state.images.concat(res.data)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      count,\n      start\n    } = this.state;\n    axios.get(`/api/photos?count=${count}&start=${start}`).then(res => this.setState({\n      images: res.data\n    }));\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"images\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.state.images.length,\n      next: this.fetchImages,\n      hasMore: true,\n      loader: /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 111\n        }\n      }, \"Loading....\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 8\n      }\n    }, this.state.images.map(image => {\n      /*#__PURE__*/\n      React.createElement(Image, {\n        key: image.id,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      });\n    })));\n  }\n\n}\nexport default Images;","map":{"version":3,"sources":["C:/Users/bhard/Desktop/React Projects Compendium/infinite-scroll-challenge/client/src/components/Images.js"],"names":["React","Component","axios","InfiniteScroll","Image","Images","state","images","count","start","fetchImages","setState","get","then","res","concat","data","componentDidMount","render","console","log","length","map","image","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SACpCK,KADoC,GAC5B;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAD4B;;AAAA,SAcpCC,WAdoC,GActB,MAAM;AAClB,YAAM;AAAEF,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAmB,KAAKH,KAA9B;AACA,WAAKK,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,GAAmBD;AAA5B,OAAd;AACAN,MAAAA,KAAK,CACFU,GADH,CACQ,qBAAoBJ,KAAM,UAASC,KAAM,EADjD,EAEGI,IAFH,CAEQC,GAAG,IACP,KAAKH,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,CAAkBQ,MAAlB,CAAyBD,GAAG,CAACE,IAA7B;AAAV,OAAd,CAHJ;AAKD,KAtBmC;AAAA;;AAOpCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKH,KAA9B;AACAJ,IAAAA,KAAK,CACFU,GADH,CACQ,qBAAoBJ,KAAM,UAASC,KAAM,EADjD,EAEGI,IAFH,CAESC,GAAD,IAAS,KAAKH,QAAL,CAAc;AAAEJ,MAAAA,MAAM,EAAEO,GAAG,CAACE;AAAd,KAAd,CAFjB;AAGD;;AAYDE,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAE,KAAKA,KAAL,CAAWC,MAAX,CAAkBc,MAA9C;AAAsD,MAAA,IAAI,EAAE,KAAKX,WAAjE;AAA8E,MAAA,OAAO,EAAE,IAAvF;AAA6F,MAAA,MAAM,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKJ,KAAL,CAAWC,MAAX,CAAkBe,GAAlB,CAAsBC,KAAK,IAAI;AAC5B;AAAA,0BAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,QAAA,KAAK,EAAED,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,KAFA,CADN,CADD,CADF;AASD;;AAnCmC;AAsCtC,eAAelB,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Image from \"./Image\";\r\n\r\nexport class Images extends Component {\r\n  state = {\r\n    images: [],\r\n    count: 30,\r\n    start: 1,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { count, start } = this.state;\r\n    axios\r\n      .get(`/api/photos?count=${count}&start=${start}`)\r\n      .then((res) => this.setState({ images: res.data }));\r\n  }\r\n\r\n  fetchImages = () => {\r\n    const { count, start } = this.state;\r\n    this.setState({ start: this.state.start + count });\r\n    axios\r\n      .get(`/api/photos?count=${count}&start=${start}`)\r\n      .then(res =>\r\n        this.setState({ images: this.state.images.concat(res.data) })\r\n      );\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"images\">\r\n       <InfiniteScroll dataLength={this.state.images.length} next={this.fetchImages} hasMore={true} loader = {<h4>Loading....</h4>} >\r\n            {this.state.images.map(image => {\r\n                <Image key={image.id} image={image} />\r\n            })}\r\n       </InfiniteScroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Images;\r\n"]},"metadata":{},"sourceType":"module"}